"use strict";(self.webpackChunkn2_utility=self.webpackChunkn2_utility||[]).push([[5430],{5430:(e,t,i)=>{i.r(t),i.d(t,{default:()=>f});var o=i(35143),l=i(50076),a=i(46053),n=(i(81806),i(76460),i(47249),i(85842)),r=i(76797),s=i(13312),u=i(2413),d=i(25515),p=i(88235);const c=new(i(11164).U)("0/0/0",0,0,0,void 0);let v=class extends d.default{constructor(){super(...arguments),this.tileInfo=p.default.create({spatialReference:s.default.WebMercator,size:256}),this.fullExtent=new r.default(-20037508.342787,-20037508.34278,20037508.34278,20037508.342787,s.default.WebMercator),this.spatialReference=s.default.WebMercator,this.type="base-elevation"}addResolvingPromise(e){super.addResolvingPromise(e)}getTileBounds(e,t,i,o){const l=o||u.v_;return c.level=e,c.row=t,c.col=i,c.extent=l,this.tileInfo.updateTileInfo(c),c.extent=void 0,l}fetchTile(){throw new l.default("BaseElevationLayer:fetchTile-not-implemented","fetchTile() is not implemented")}async queryElevation(e,t){const{ElevationQuery:i}=await this._importElevationQuery();return(new i).query(this,e,t)}createElevationSampler(e,t){return this._importElevationQuery().then((i=>(new i.ElevationQuery).createSampler(this,e,t)))}_importElevationQuery(){return i.e(18722).then(i.bind(i,18722))}};(0,o._)([(0,a.MZ)({type:p.default})],v.prototype,"tileInfo",void 0),(0,o._)([(0,a.MZ)({type:["show","hide"]})],v.prototype,"listMode",void 0),(0,o._)([(0,a.MZ)()],v.prototype,"fullExtent",void 0),(0,o._)([(0,a.MZ)()],v.prototype,"spatialReference",void 0),(0,o._)([(0,a.MZ)({readOnly:!0,value:"base-elevation"})],v.prototype,"type",void 0),v=(0,o._)([(0,n.$)("esri.layers.BaseElevationLayer")],v);const f=v}}]);
//# sourceMappingURL=5430.2605f91c.chunk.js.map