"use strict";(self.webpackChunkn2_utility=self.webpackChunkn2_utility||[]).push([[89646],{89646:(e,t,i)=>{i.d(t,{$h:()=>h,Ef:()=>q,IP:()=>R,P1:()=>y,hF:()=>S,jQ:()=>w,rT:()=>z,rZ:()=>n,uR:()=>b});var n,r,a=i(73582),l=i(24648),o=i(31633),c=i(19555),s=i(72745),u=i(20664),g=i(9392),v=i(14487),f=i(7137),d=i(80963);function h(e,t){if(null==e||null==t)return;const i=p(e,t);return null!=i?(0,l.Wq)(i,"radians","geographic"):void 0}(r=n||(n={})).Absolute="absolute",r.Relative="relative",r.RelativeBilateral="relative-bilateral";const p=(()=>{const e=(0,g.vt)(),t=(0,g.vt)();return(i,n)=>((0,u.i)(e,i.x,i.y,i.z??0),(0,u.i)(t,n.x,n.y,n.z??0),R(e,t,i.spatialReference,n.spatialReference))})(),R=(()=>{const e=(0,s.vt)(),t=(0,g.vt)(),i=(0,g.vt)();return(n,r,a,l)=>{if((0,u.p)(n,r))return;const g=(0,f.geodesicCompatibleSpatialReference)(a),h=(0,f.geodesicCompatibleSpatialReference)(l);if(g&&h&&(0,d.aI)(g,h)&&(0,v.F)(n,a,t,g)&&(0,v.F)(r,l,i,h)){const{azimuth:e}=(0,f.inverseGeodeticSolver)(F,t,i,g);return null!=e?(0,o.oU)(e,"degrees","radians"):void 0}e[0]=r[0]-n[0],e[1]=r[1]-n[1];let p=(0,c.g7)(s.JP,e);return e[0]<0&&(p=W-p),p}})();function b(e,t,i){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:n.Absolute;if(t&&i)switch(r){case n.Absolute:return h(t,i);case n.Relative:return w(m(e,t,i),n.Relative);case n.RelativeBilateral:return w(m(e,t,i),n.RelativeBilateral)}}function m(e,t,i){if(!e||!t||!i)return;const n=p(e,t),r=p(t,i);return null!=n&&null!=r?(0,l.Wq)(r-n,"radians","geographic"):void 0}function w(e,t){if(null!=e)switch(t){case n.Absolute:return y(e);case n.Relative:{const t=S(e);let i=A.normalize(t,0,!0);return-180===i&&(i=180),(0,l.Wq)(i,"degrees","geographic")}case n.RelativeBilateral:{const t=S(e),i=Math.abs(A.normalize(t,0,!0));return(0,l.Wq)(i,"degrees","geographic")}}}function y(e){const t=S(e),i=k.normalize(t,0,!0);return(0,l.Wq)(i,"degrees","geographic")}const z=(()=>{const e=(0,g.vt)();return function(t,i,n,r,a){let c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"geodesic";(0,u.c)(e,i);const s=S(a);if("geodesic"===c){const a=(0,f.geodesicCompatibleSpatialReference)(n);if(a&&(0,v.F)(e,n,e,a))return(0,f.directGeodeticSolver)(t,e,s,r,a),t[2]=i[2],!!(0,v.F)(t,a,t,n)}const g=(0,l.g2)(s,"geographic","arithmetic"),d=(0,o.oU)(g,"degrees","radians"),h=i[0]+r*Math.cos(d),p=i[1]+r*Math.sin(d),R=i[2];return(0,u.i)(t,h,p,R),!0}})();function S(e){if(null!=e)return(0,l.g2)(C(e),e.rotationType,"geographic")}function q(e){if(null!=e)return(0,l.g2)(C(e),e.rotationType,"arithmetic")}function C(e){return(0,o.oU)(e.value,e.unit,"degrees")}const F=new f.InverseGeodeticSolverResult,W=2*Math.PI,k=a.ie,A=new a.hr(-180,180)}}]);
//# sourceMappingURL=89646.53569453.chunk.js.map