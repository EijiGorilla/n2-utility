"use strict";(self.webpackChunkn2_utility=self.webpackChunkn2_utility||[]).push([[32833,88685],{11066:(e,t,a)=>{a.r(t),a.d(t,{default:()=>w});var l=a(35143),r=a(3825),i=a(50076),o=a(45802),n=a(77717),s=a(46053),u=(a(81806),a(76460),a(47249),a(85842)),d=a(19247),p=a(13312),g=a(32833),c=a(65624),y=a(11270),h=a(22848),f=a(88235);const b=new o.J({BingMapsAerial:"aerial",BingMapsRoad:"road",BingMapsHybrid:"hybrid"});let v=class extends((0,c.dM)((0,y.q)((0,n.P)(g.default)))){constructor(e){super(e),this.type="bing-maps",this.tileInfo=new f.default({size:[256,256],dpi:96,origin:new d.default({x:-20037508.342787,y:20037508.342787,spatialReference:p.default.WebMercator}),spatialReference:p.default.WebMercator,lods:[new h.default({level:1,resolution:78271.5169639999,scale:295828763.795777}),new h.default({level:2,resolution:39135.7584820001,scale:147914381.897889}),new h.default({level:3,resolution:19567.8792409999,scale:73957190.948944}),new h.default({level:4,resolution:9783.93962049996,scale:36978595.474472}),new h.default({level:5,resolution:4891.96981024998,scale:18489297.737236}),new h.default({level:6,resolution:2445.98490512499,scale:9244648.868618}),new h.default({level:7,resolution:1222.99245256249,scale:4622324.434309}),new h.default({level:8,resolution:611.49622628138,scale:2311162.217155}),new h.default({level:9,resolution:305.748113140558,scale:1155581.108577}),new h.default({level:10,resolution:152.874056570411,scale:577790.554289}),new h.default({level:11,resolution:76.4370282850732,scale:288895.277144}),new h.default({level:12,resolution:38.2185141425366,scale:144447.638572}),new h.default({level:13,resolution:19.1092570712683,scale:72223.819286}),new h.default({level:14,resolution:9.55462853563415,scale:36111.909643}),new h.default({level:15,resolution:4.77731426794937,scale:18055.954822}),new h.default({level:16,resolution:2.38865713397468,scale:9027.977411}),new h.default({level:17,resolution:1.19432856685505,scale:4513.988705}),new h.default({level:18,resolution:.597164283559817,scale:2256.994353}),new h.default({level:19,resolution:.298582141647617,scale:1128.497176}),new h.default({level:20,resolution:.1492910708238085,scale:564.248588})]}),this.key=null,this.style="road",this.culture="en-US",this.region=null,this.portalUrl=null,this.hasAttributionData=!0}get bingMetadata(){return this._get("bingMetadata")}set bingMetadata(e){this._set("bingMetadata",e)}get copyright(){return null!=this.bingMetadata?this.bingMetadata.copyright:null}get operationalLayerType(){return b.toJSON(this.style)}get bingLogo(){return null!=this.bingMetadata?this.bingMetadata.brandLogoUri:null}load(e){return this.key?this.addResolvingPromise(this._getMetadata()):this.portalUrl?this.addResolvingPromise(this._getPortalBingKey().then((()=>this._getMetadata()))):this.addResolvingPromise(Promise.reject(new i.default("bingmapslayer:load","Bing layer must have bing key."))),Promise.resolve(this)}getTileUrl(e,t,a){if(!this.loaded||null==this.bingMetadata)return null;const l=this.bingMetadata.resourceSets[0].resources[0],r=l.imageUrlSubdomains[t%l.imageUrlSubdomains.length],i=this._getQuadKey(e,t,a);return l.imageUrl.replace("{subdomain}",r).replace("{quadkey}",i)}async fetchAttributionData(){return this.load().then((()=>null==this.bingMetadata?null:{contributors:this.bingMetadata.resourceSets[0].resources[0].imageryProviders.map((e=>({attribution:e.attribution,coverageAreas:e.coverageAreas.map((e=>({zoomMin:e.zoomMin,zoomMax:e.zoomMax,score:1,bbox:[e.bbox[0],e.bbox[1],e.bbox[2],e.bbox[3]]})))})))}))}_getMetadata(){const e={road:"roadOnDemand",aerial:"aerial",hybrid:"aerialWithLabelsOnDemand"}[this.style];return(0,r.default)(`https://dev.virtualearth.net/REST/v1/Imagery/Metadata/${e}`,{responseType:"json",query:{include:"ImageryProviders",uriScheme:"https",key:this.key,suppressStatus:!0,output:"json",culture:this.culture,userRegion:this.region}}).then((e=>{const t=e.data;if(200!==t.statusCode)throw new i.default("bingmapslayer:getmetadata",t.statusDescription);if(this.bingMetadata=t,0===this.bingMetadata.resourceSets.length)throw new i.default("bingmapslayer:getmetadata","no bing resourcesets");if(0===this.bingMetadata.resourceSets[0].resources.length)throw new i.default("bingmapslayer:getmetadata","no bing resources")})).catch((e=>{throw new i.default("bingmapslayer:getmetadata",e.message)}))}_getPortalBingKey(){return(0,r.default)(this.portalUrl??"",{responseType:"json",authMode:"no-prompt",query:{f:"json"}}).then((e=>{if(!e.data.bingKey)throw new i.default("bingmapslayer:getportalbingkey","The referenced Portal does not contain a valid bing key");this.key=e.data.bingKey})).catch((e=>{throw new i.default("bingmapslayer:getportalbingkey",e.message)}))}_getQuadKey(e,t,a){let l="";for(let r=e;r>0;r--){let e=0;const i=1<<r-1;a&i&&(e+=1),t&i&&(e+=2),l+=e.toString()}return l}};(0,l._)([(0,s.MZ)({json:{read:!1,write:!1},value:null})],v.prototype,"bingMetadata",null),(0,l._)([(0,s.MZ)({json:{read:!1,write:!1},value:"bing-maps",readOnly:!0})],v.prototype,"type",void 0),(0,l._)([(0,s.MZ)({type:f.default})],v.prototype,"tileInfo",void 0),(0,l._)([(0,s.MZ)({type:String,readOnly:!0,json:{read:!1,write:!1}})],v.prototype,"copyright",null),(0,l._)([(0,s.MZ)({type:String,json:{write:!1,read:!1}})],v.prototype,"key",void 0),(0,l._)([(0,s.MZ)({type:b.apiValues,nonNullable:!0,json:{read:{source:"layerType",reader:b.read}}})],v.prototype,"style",void 0),(0,l._)([(0,s.MZ)({type:["BingMapsAerial","BingMapsHybrid","BingMapsRoad"]})],v.prototype,"operationalLayerType",null),(0,l._)([(0,s.MZ)({type:String,json:{write:!1,read:!1}})],v.prototype,"culture",void 0),(0,l._)([(0,s.MZ)({type:String,json:{write:!1,read:!1}})],v.prototype,"region",void 0),(0,l._)([(0,s.MZ)({type:String,json:{write:!0,read:!0}})],v.prototype,"portalUrl",void 0),(0,l._)([(0,s.MZ)({type:Boolean,json:{write:!1,read:!1}})],v.prototype,"hasAttributionData",void 0),(0,l._)([(0,s.MZ)({type:String,readOnly:!0})],v.prototype,"bingLogo",null),v=(0,l._)([(0,u.$)("esri.layers.BingMapsLayer")],v);const w=v},16852:(e,t,a)=>{a.d(t,{C:()=>o,m:()=>i});var l=a(50076),r=a(50346);async function i(e,t,a){let i;try{i=await createImageBitmap(e)}catch(o){throw new l.default("request:server",`Unable to load ${t}`,{url:t,error:o})}return(0,r.throwIfAborted)(a),i}async function o(e,t,a,i,o){let n;try{n=await createImageBitmap(e)}catch(s){throw new l.default("request:server",`Unable to load tile ${t}/${a}/${i}`,{error:s,level:t,row:a,col:i})}return(0,r.throwIfAborted)(o),n}},32833:(e,t,a)=>{a.r(t),a.d(t,{default:()=>M});var l,r=a(35143),i=a(3825),o=a(50076),n=a(46053),s=(a(81806),a(76460),a(47249),a(85842)),u=a(76797),d=a(13312),p=a(2413),g=a(25515),c=a(65624),y=a(21617),h=a(5682),f=a(16852),b=a(88235);const v=new(a(11164).U)("0/0/0",0,0,0,void 0);let w=l=class extends((0,c.dM)((0,h.j)((0,y.J)(g.default)))){constructor(){super(...arguments),this.tileInfo=b.default.create({spatialReference:d.default.WebMercator,size:256}),this.type="base-tile",this.fullExtent=new u.default(-20037508.342787,-20037508.34278,20037508.34278,20037508.342787,d.default.WebMercator),this.spatialReference=d.default.WebMercator}addResolvingPromise(e){super.addResolvingPromise(e)}getTileBounds(e,t,a,l){const r=l||(0,p.vt)();return v.level=e,v.row=t,v.col=a,v.extent=r,this.tileInfo.updateTileInfo(v),v.extent=void 0,r}fetchTile(e,t,a){let l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const{signal:r}=l,o=this.getTileUrl(e,t,a),n={responseType:"image",signal:r,query:{...this.refreshParameters}};return(0,i.default)(o??"",n).then((e=>e.data))}async fetchImageBitmapTile(e,t,a){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const{signal:o}=r;if(this.fetchTile!==l.prototype.fetchTile){const l=await this.fetchTile(e,t,a,r);return(0,f.C)(l,e,t,a,o)}const n=this.getTileUrl(e,t,a)??"",s={responseType:"blob",signal:o,query:{...this.refreshParameters}},{data:u}=await(0,i.default)(n,s);return(0,f.C)(u,e,t,a,o)}getTileUrl(){throw new o.default("basetilelayer:gettileurl-not-implemented","getTileUrl() is not implemented")}};(0,r._)([(0,n.MZ)({type:b.default})],w.prototype,"tileInfo",void 0),(0,r._)([(0,n.MZ)({type:["show","hide"]})],w.prototype,"listMode",void 0),(0,r._)([(0,n.MZ)({readOnly:!0,value:"base-tile"})],w.prototype,"type",void 0),(0,r._)([(0,n.MZ)({nonNullable:!0})],w.prototype,"fullExtent",void 0),(0,r._)([(0,n.MZ)()],w.prototype,"spatialReference",void 0),w=l=(0,r._)([(0,s.$)("esri.layers.BaseTileLayer")],w);const M=w}}]);
//# sourceMappingURL=88685.00c1bff0.chunk.js.map